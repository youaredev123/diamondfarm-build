{"version":3,"sources":["utils/formatBalance.ts","components/Input/Input.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Input/index.ts","hooks/useAllowance.ts","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useApprove","lpContract","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","methods","ethers","constants","MaxUint256","send","from","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","ethereum","fastRefresh","getTokenBalance","res","Wrapper","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","useLotteryAllowance","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","dependency","fetch","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","toString","on","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","ProgressWrapper","BottomTextWrapper","LotteryProgress","Text","useI18n","msUntilLotteryDraw","getLotteryDrawTime","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","TranslateString","style","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","marginRight","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","width","height","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","maxTickets","onMultiBuy","useMultiBuyLottery","handleBuy","setMax","fetchMax","useMaxNumber","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","fontWeight","Link","Row","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isloading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/8.f753ca34.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { cond } from 'lodash'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","export { default } from './Input'\r\nexport type { InputProps } from './Input'\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [20]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 20 && currentHour >= 20 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n        <BottomTextWrapper>\r\n          <Text fontSize=\"20px\" bold color=\"contrast\">\r\n            {/* {TranslateString(0, 'Upcoming Draw :  5/30/2021 19:00:00 UTC')} */}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #09c8e6 0%, #0d4f59 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title style={{color:\"black\"}}>{TranslateString(999, 'The DIAM Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with DIAM')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n            DIAM\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: number) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n\r\n      const txHash = await onMultiBuy('10', length)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 4) {\r\n      setVal('4')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} DIAM`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 4 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your DIAM will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve DIAM')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n    <CardBody>\r\n      <CardHeader>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        {lotteryHasDrawn ? (\r\n          <TicketCountWrapper>\r\n            <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n          </TicketCountWrapper>\r\n        ) : (\r\n          <TicketCountWrapper>\r\n            <Text fontSize=\"14px\" color=\"textSubtle\">\r\n              {TranslateString(999, 'Your tickets for this round')}\r\n            </Text>\r\n            <Heading size=\"lg\">{ticketsLength}</Heading>\r\n          </TicketCountWrapper>\r\n        )}\r\n      </CardHeader>\r\n      <TicketActions />\r\n    </CardBody>\r\n  </StyledCard>\r\n)\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} DIAM</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.perseusfinance.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #09c8e6 0%, #0d4f59 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(999, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend DIAM to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.perseusfinance.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets}>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              \r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} DIAM`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isloading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isloading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isloading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isloading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isloading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isloading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isloading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isloading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isloading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isloading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isloading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(999, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.perseusfinance.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}