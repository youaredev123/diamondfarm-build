{"version":3,"sources":["components/Input/Input.tsx","hooks/useApprove.ts","hooks/useAllowance.ts","views/Ifos/components/Hero.tsx","hooks/useBlock.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useApprove","lpContract","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","methods","ethers","constants","MaxUint256","send","from","useLotteryAllowance","useState","BigNumber","allowance","setAllowance","useEffect","fetchAllowance","getAllowance","res","refreshInterval","setInterval","clearInterval","useIfoAllowance","dependency","call","fetch","Title","Heading","attrs","as","size","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","useBlock","useContext","BlockContext","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","description","mb","alignItems","src","alt","width","height","StyledIfoCardDetails","Item","secondary","Display","IfoCardDetails","minConstribution","maxConstribution","href","StyledSpacer","StyledTokenAdornmentWrapper","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","IfoCardContribute","address","currencyAddress","currency","contract","status","raisingAmount","tokenDecimals","pendingTx","setPendingTx","setValue","totalVal","setTotalValue","contractRaisingToken","useERC20","fullWidth","disabled","onClick","console","error","getContribution","totalBNBAmount","val","retVal","dividedBy","pow","Number","buyFunction","parseFloat","rateDecimals","tokenRatePerEth","amount","times","toString","web3","Web3","givenProvider","eth","sendTransaction","to","utils","toWei","hash","log","e","currentTarget","StyledIfoCard","Card","IfoCard","ifo","id","isLoading","progress","state","setState","usePresaleContract","currentBlock","Ribbon","variantColor","text","getRibbonComponent","fetchProgress","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","BaseLayout","sm","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","Ifos","path","useRouteMatch","exact","CurrentIfo"],"mappings":"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","file":"static/js/12.5fc6faa8.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: #fcdde0;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\nbackground-image: linear-gradient(180deg, #085184 0%,#148adc 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n  margin-bottom: 32px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Title>Presale</Title>\r\n        <Blurb>{TranslateString(50002, 'Buy TOKENS with BNB in presale')}</Blurb>\r\n        <Blurb>{TranslateString(50002, '---------------------------------')}</Blurb>\r\n        <Blurb>{TranslateString(50002, 'Bonus for each fundraise milestone :')}</Blurb>\r\n        <Blurb>{TranslateString(50002, '  > 0.1 ~ 2000BNB - 20%')}</Blurb>\r\n        <Blurb>{TranslateString(50002, '  > 2000 ~ 5000BNB - 15%')}</Blurb>\r\n        <Blurb>{TranslateString(50002, '  > 5000 ~ 10,000BNB - 10%')}</Blurb>\r\n        <Blurb>{TranslateString(50002, '  > 10,000 ~ 20,000BNB - 5%')}</Blurb>\r\n        \r\n        <Blurb>{TranslateString(50002, 'Join the Presale early to score incredible bonus.')}</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n  description: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 16px;\r\n  text-align: right;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle, description }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n      <img src={`/images/ifos/${ifoId}.png`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n        <Description>{description}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  minConstribution: string\r\n  maxConstribution: string\r\n}\r\n\r\nconst StyledIfoCardDetails = styled.div`\r\n  margin-bottom: 24px;\r\n  margin-top: 32px;\r\n`\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\r\n  minConstribution,\r\n  maxConstribution,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <StyledIfoCardDetails>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'Minimum')}</Display>\r\n          <Text>{minConstribution}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'Maximum')}</Display>\r\n          <Text>{maxConstribution}</Text>\r\n        </Item>\r\n      </StyledIfoCardDetails>\r\n      <LinkExternal href=\"http://diamond.amblade.me/uploads/PresaleInformation.pdf\">\r\n        {TranslateString(999, 'Presale information')} \r\n      </LinkExternal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Input, { InputProps } from './Input'\r\n\r\ninterface Props extends InputProps {\r\n  max?: number | string\r\n  symbol?: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useModal, Button, Text, Modal, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport { useIfoApprove } from 'hooks/useApprove'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport Web3 from 'web3';\r\nimport BalanceInput from 'components/Input/BalanceInput'\r\nimport LabelButton from './LabelButton'\r\nimport ContributeModal from './ContributeModal'\r\n\r\n\r\nexport interface Props {\r\n  address: string\r\n  currency: string\r\n  currencyAddress: string\r\n  contract: Contract\r\n  status: IfoStatus\r\n  raisingAmount?: BigNumber\r\n  tokenDecimals: number\r\n}\r\n\r\nconst IfoCardContribute: React.FC<Props> = ({\r\n  address,\r\n  currency,\r\n  currencyAddress,\r\n  contract,\r\n  status,\r\n  raisingAmount,\r\n  tokenDecimals,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const [value, setValue] = useState('')\r\n  const [totalVal, setTotalValue] = useState(0)\r\n\r\n  const { account } = useWallet()\r\n  const contractRaisingToken = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\r\n  const onApprove = useIfoApprove(contractRaisingToken, address)\r\n\r\n  if (allowance === null) {\r\n    return null\r\n  }\r\n\r\n  if (allowance <= 0) {\r\n    return (\r\n      <Button\r\n        fullWidth\r\n        disabled={pendingTx}\r\n        onClick={async () => {\r\n          try {\r\n            setPendingTx(true)\r\n            await onApprove()\r\n            setPendingTx(false)\r\n          } catch (e) {\r\n            setPendingTx(false)\r\n            console.error(e)\r\n          }\r\n        }}\r\n      >\r\n        Approve\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  const getContribution = async () =>{\r\n    const val = await contract.methods.totalBNBAmount().call();\r\n    const retVal = new BigNumber(val).dividedBy(new BigNumber(10).pow(18));\r\n    setTotalValue(Number(retVal))\r\n  }\r\n\r\n  getContribution();\r\n\r\n  const buyFunction = async () =>{\r\n    if (parseFloat(value) > 0) {\r\n      setPendingTx(true);\r\n\r\n      const rateDecimals = await contract.methods.rateDecimals().call();\r\n      const tokenRatePerEth = await contract.methods.tokenRatePerEth().call();\r\n      const amount = new BigNumber(value).times(new BigNumber(10).pow(rateDecimals)).dividedBy(new BigNumber(tokenRatePerEth)).toString();\r\n\r\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n      await web3.eth.sendTransaction({\r\n        from:account, \r\n        to:'0xEa5Ef28Db8A660C199701ffEc2BB4eBfb35ec2Ef', \r\n        value:web3.utils.toWei(amount, \"ether\")} , function(error, hash){\r\n          setPendingTx(false)\r\n      });\r\n      getContribution();\r\n      // await contract.methods\r\n      //   .receive({from: account , value: new BigNumber(value).times(new BigNumber(10).pow(18)).toString()})\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  console.log(\"hms\", totalVal)\r\n\r\n  return (\r\n    <>\r\n      <Text>Current contributed: {totalVal} BNB</Text>\r\n      <BalanceInput\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n      />\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={buyFunction}\r\n        >\r\n          BUY DIAM\r\n        </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardContribute\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { usePresaleContract } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardDescription from './IfoCardDescription'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardTime from './IfoCardTime'\r\nimport IfoCardContribute from './IfoCardContribute'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.png')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 112px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n`\r\n// 'coming_soon', 'live', 'finished'\r\nconst getStatus = \"live\"\r\n\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const {\r\n    id,\r\n    address,\r\n    name,\r\n    subTitle,\r\n    description,\r\n    minConstribution,\r\n    maxConstribution,\r\n    currency,\r\n    currencyAddress,\r\n    tokenDecimals,\r\n  } = ifo\r\n  const [state, setState] = useState({\r\n    isLoading: true,\r\n    status: null,\r\n    progress: 0,\r\n  })\r\n  const { account } = useWallet()\r\n  const contract = usePresaleContract(address)\r\n\r\n  const currentBlock = useBlock()\r\n  const TranslateString = useI18n()\r\n\r\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      // const startBlockNum = parseInt(startBlock, 10)\r\n      // const endBlockNum = parseInt(endBlock, 10)\r\n\r\n      const status = \"live\"\r\n      // const totalBlocks = endBlockNum - startBlockNum\r\n      // const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress = 0\r\n\r\n      setState({\r\n        isLoading: false,        \r\n        status,\r\n        progress,        \r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [currentBlock, contract, setState])\r\n\r\n  const isActive = state.status === 'live'\r\n  const isFinished = state.status === 'finished'\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} description={description} />\r\n        {!account && <UnlockButton fullWidth />}\r\n        <IfoCardContribute\r\n          address={address}\r\n          currency={currency}\r\n          currencyAddress={currencyAddress}\r\n          contract={contract}\r\n          status={state.status}\r\n          tokenDecimals={tokenDecimals}\r\n        />\r\n        <IfoCardDetails\r\n          minConstribution={minConstribution}\r\n          maxConstribution={maxConstribution}\r\n        />\r\n      </CardBody>\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <IfoCards isSingle>\r\n        <IfoCard ifo={activeIfo} />\r\n      </IfoCards>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        {/* <IfoTabButtons /> */}\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        {/* <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route> */}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}